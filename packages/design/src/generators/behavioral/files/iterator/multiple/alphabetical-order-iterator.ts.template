import { WordsCollection } from './words-collection';
import { Iterator } from './iterator';

/**
 * <%= alphabeticalOrderIterator %>
 */

export class AlphabeticalOrderIterator implements Iterator<string> {
  #collection: WordsCollection;

  /**
   * <%= alphabeticalOrderIteratorPosition %>
   */
  #position = 0;

  /**
   * <%= alphabeticalOrderIteratorReverse %>
   */
  #reverse = false;

  constructor(collection: WordsCollection, reverse = false) {
    this.#collection = collection;
    this.#reverse = reverse;

    if (reverse) {
      this.#position = collection.getCount() - 1;
    }
  }

  rewind() {
    this.#position = this.#reverse ? this.#collection.getCount() - 1 : 0;
  }

  current() {
    return this.#collection.getItems()[this.#position];
  }

  key() {
    return this.#position;
  }

  next() {
    const item = this.#collection.getItems()[this.#position];
    this.#position += this.#reverse ? -1 : 1;
    return item;
  }

  valid() {
    if (this.#reverse) {
      return this.#position >= 0;
    }

    return this.#position < this.#collection.getCount();
  }
}